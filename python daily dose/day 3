#1.You are given with a list of integer elements. Make a new list which will
#store square of elements of previous list.
'''
a=[1,2,3,4]
square=[]
for i in a:
    sq=i*i
    square.append(sq)
print(square)
'''

#2.From a list containing ints, strings and floats, make three lists to store
#them separately
'''
a=[1,'ronaldo',7.0,2,'madrid',10.4]
inti=[]
floati=[]
string=[]
for i in a:
    if type(i)==int:
        inti.append(i)
    elif type(i)==str:
        string.append(i)
    else:
        floati.append(i)
print(inti)
print(string)
print(floati)
'''
#3. Print the pattern 
#1 
#1 2  
#1 2 3 
#1 2 3 4 
#1 2 3 4 5
'''
no=int(input("enter the number:"))
for i in range(1,no+1):
    for j in range(1,i+1):
        print(j,end=" ")
    print(" ")


'''
#4.Accept data in two 3*3  matrix and calculate the sum of the matrices.
'''

a=[[1,2,3],[4,5,6],[7,8,9]]
b=[[9,8,7],[6,5,4],[3,2,1]]
c=[[0,0,0],[0,0,0],[0,0,0]]

for i in range(len(a)):
    for j in range(len(a[0])):
        c[i][j]=a[i][j]+b[i][j]
for k in c:
    print(k)

'''
#5. Write a Python program to check whether a given number is a narcissistic
#number or not,For example, 371 is a narcissistic number; it has three digits,
#and if we cube each digits  33 + 73 + 13 the sum is 371. Other 3-digit
#narcissistic numbers are 
#153 = 13 + 53 + 33 
#370 = 33 + 73 + 03 
#407 = 43 + 03 + 73. 
#There are also 4-digit narcissistic numbers, some of which are 1634, 8208,
#9474 since 
#1634 = 14+64+34+44 
#8208 = 84+24+04+84 
#9474 = 94+44+74+44
'''
no=int(input("enter a number:"))
tno=no
s=0
if len(str(no))<=3:
    while tno!=0:
        r=tno%10
        s=s+r*r*r
        tno=tno//10
    if (s==no):
        print(no,"is a narcissistic number")
    else:
        print(no,"is not a narcissistic number")
else:
    while tno!=0:
        r=tno%10
        s=s+r*r*r*r
        tno=tno//10
    if (s==no):
        print(no,"is a narcissistic number")
    else:
        print(no,"is not a narcissistic number")

'''




















    
